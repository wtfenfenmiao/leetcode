//这个加的套路出现了好几次了，只不过这次是链表
//没看答案
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* re1=new ListNode(0);
        ListNode* re=re1;
        int jinwei=0;
        while(l1!=NULL||l2!=NULL||jinwei==1)
        {
            jinwei+=(l1!=NULL)?l1->val:0;
            jinwei+=(l2!=NULL)?l2->val:0;
            int thisNum=(jinwei)%10;
            jinwei=(jinwei)/10;
            ListNode* thisNode=new ListNode(thisNum);
            re->next=thisNode;
            re=thisNode;
            l1=(l1==NULL)?NULL:l1->next;
            l2=(l2==NULL)?NULL:l2->next;
        }
        return re1->next;
    }
};


//把两个判断写一起，其实没差啥
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* re1=new ListNode(0);
        ListNode* re=re1;
        int jinwei=0;
        while(l1!=NULL||l2!=NULL||jinwei==1)
        {
            if(l1!=NULL)
            {
                jinwei+=l1->val;
                l1=l1->next;
            }
            if(l2!=NULL)
            {
                jinwei+=l2->val;
                l2=l2->next;
            }
            int thisNum=(jinwei)%10;
            jinwei=(jinwei)/10;
            ListNode* thisNode=new ListNode(thisNum);
            re->next=thisNode;
            re=thisNode;
        }
        return re1->next;
    }
};