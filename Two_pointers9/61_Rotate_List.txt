//和19题Rotate_List原理差不多
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==NULL)
            return NULL;
        int count=0;
        ListNode* fast;
        ListNode* slow;
        fast=head;
        slow=head;
        while(fast!=NULL)
        {
            ++count;
            fast=fast->next;
        }
        k=k%count;
        if(k==0)
            return head;
        fast=head;
        while(k--)
        {
            fast=fast->next;
        }
        while(fast->next!=NULL)
        {
            fast=fast->next;
            slow=slow->next;
        }
        fast->next=head;
        head=slow->next;
        slow->next=NULL;
        
        
        return head;
    }
};