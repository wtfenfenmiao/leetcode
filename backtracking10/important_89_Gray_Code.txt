//回溯通用模板
class Solution {
public:
    vector<int> grayCode(int n) {
        vector<int> re;
        bitset<32> bits;
        backtrack(re,bits,n);
        return re;
    }
    void backtrack(vector<int>& re,bitset<32>& bits,int k)
    {
        if(k==0)
            re.push_back(bits.to_ulong());
        else
        {
            backtrack(re,bits,k-1);
            bits.flip(k-1);
            backtrack(re,bits,k-1);
        }
    }
};



//下面这个过于神奇，我没想明白，但是很刺激......
class Solution {
public:
    vector<int> grayCode(int n) {
        vector<int> re;
        for(int i=0;i<(1<<n);++i)
        {
            re.push_back(i^(i/2));
        }
        return re;
    }
};