//直接递归版本
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root==NULL)
            return NULL;
        TreeNode* temp;
        temp=root->right;
        root->right=root->left;
        root->left=temp;
        invertTree(root->left);
        invertTree(root->right);
        return root;
    }
};

//iterative版本
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root==NULL)
            return root;
        queue<TreeNode*> qu;
        qu.push(root);
        while(!qu.empty())
        {
            TreeNode* temp=qu.front();
            TreeNode* temp1=temp->left;
            temp->left=temp->right;
            temp->right=temp1;
            qu.pop();
            if(temp->right)
                qu.push(temp->right);
            if(temp->left)
                qu.push(temp->left);
            
        }
        return root;
    }
};