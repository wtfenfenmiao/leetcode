//还是中序遍历，灵活中序遍历
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
private:
    ListNode* node;
public:
    TreeNode* sortedListToBST(ListNode* head) {
        if(head==NULL)
            return NULL;
        int count=0;
        node=head;
        while(head)
        {
            ++count;
            head=head->next;
        }
        return help(0,count-1);
    }
    TreeNode* help(int start,int end)
    {
        if(start>end)
            return NULL;
        int mid=start+(end-start)/2;
        TreeNode* left=help(start,mid-1);
        TreeNode* root=new TreeNode(node->val);
        node=node->next;
        root->left=left;
        root->right=help(mid+1,end);
        return root;
        
    }
    
};