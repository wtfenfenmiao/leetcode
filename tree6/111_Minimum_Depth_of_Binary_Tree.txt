//好像一个脑筋急转弯......
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root==NULL)
            return 0;
        else
        {
            int left=minDepth(root->right);
            int right=minDepth(root->left);
            return (left==0||right==0)?(left+right+1):(min(left,right)+1);
        }
            
    }
};



//广度优先搜索
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        queue<TreeNode*> qu;
        int depth=0;
        if(root==NULL)
            return depth;
        qu.push(root);
        ++depth;
        while(!qu.empty())
        {
            int si=qu.size();
            for(int i=0;i<si;++i)
            {
                TreeNode* temp=qu.front();
                if((!temp->left)&&(!temp->right))
                    return depth;
                if(temp->left)
                    qu.push(temp->left);
                if(temp->right)
                    qu.push(temp->right);
                qu.pop();            
            }
            ++depth;
        }
        
    }
};