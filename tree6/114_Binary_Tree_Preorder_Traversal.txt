//递归的方法很简单......送分题
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> re;
        if(root==NULL)
            return re;
        re.push_back(root->val);
        vector<int> left=preorderTraversal(root->left);
        vector<int> right=preorderTraversal(root->right);
        re.insert(re.end(),left.begin(),left.end());
        re.insert(re.end(),right.begin(),right.end());
        return re;
    }
};


//非递归的方法，用栈，存右孩子结点
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> re;
        stack<TreeNode*> st;
        while(root)
        {
            re.push_back(root->val);
            if(root->right)
                st.push(root->right);
            if(!root->left&&!st.empty())
            {
                root=st.top();
                st.pop();
            }
            else
                root=root->left;
        }
        return re;
    }
};