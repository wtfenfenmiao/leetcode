//229 boyer-moore
class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        vector<int> re;
        int x=0;
        int y=1;
        int cx=0;
        int cy=0;
        for(int i=0;i<nums.size();++i)
        {
            int temp=nums[i];
            if(nums[i]==x) ++cx;
            else if(nums[i]==y) ++cy;
            else if(cx==0) {x=temp;cx=1;}
            else if(cy==0) {y=temp;cy=1;}
            else {--cx;--cy;}
        }
        cx=0;cy=0;
        for(int i=0;i<nums.size();++i)
        {
            if(nums[i]==x) ++cx;
            else if(nums[i]==y) ++cy;
        }
        if(cx>nums.size()/3) re.push_back(x);
        if(cy>nums.size()/3) re.push_back(y);
        return re;
    }
};

//我自己写的，我觉得好些......
class Solution {

public:

    vector<int> majorityElement(vector<int>& nums) {

        vector<int> re;

        if(nums.size()==0)

            return re;

        sort(nums.begin(),nums.end());

        
int thisnum=nums[0];

        int cnt=1;

        int sum=nums.size()/3;

        for(int i=0;i<nums.size();++i)

        {

            if(i==nums.size()-1||nums[i]!=nums[i+1])

            {

                if(cnt>sum)

                    re.push_back(thisnum);

                thisnum=i==nums.size()-1?0:nums[i+1];

                cnt=1;

            }

            else

            {

                ++cnt;

            }

        }

        return re;

    }

};


//169的 boyer-moore
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int x=0;
        int cx=0;
        for(int i=0;i<nums.size();++i)
        {
            if(nums[i]==x)
                ++cx;
            else if(cx==0)
            {
                x=nums[i];
                cx=1;
            }
            else 
                --cx;
        }
        return x;
    }
};