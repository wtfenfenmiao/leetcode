//随便写的
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        sort(nums.begin(),nums.end());
        return nums[nums.size()-k];
    }
};


//故意用的堆
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int> heap;
        for(int i=0;i<nums.size();++i)
        {
            heap.push(nums[i]);
        }
        while(--k)
        {
            heap.pop();
        }
        return heap.top();
    }
};


//这个题在数据结构与算法分析里经常见啊......还有两种算法，没太看明白