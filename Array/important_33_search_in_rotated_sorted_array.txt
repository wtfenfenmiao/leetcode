//先一个二分查找找到最小的在哪里，然后在一个二分查找找目标，然而这个判断条件要注意，改到哭......
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int lo=0;
        int hi=nums.size()-1;
        int si=nums.size();
        while(lo<hi)
        {
            int mid=(lo+hi)/2;
            if(nums[mid]>nums[hi])
                lo=mid+1;
            else
                hi=mid;
        }
        int reallo=lo;
        lo=0;
        hi=nums.size()-1;
        while(lo<=hi)
        {
            int mid=(lo+hi)/2;
            if(nums[(mid+reallo)%si]==target)
                return (mid+reallo)%si;
            else if(nums[(mid+reallo)%si]>target)
            {
                hi=mid-1;
            }
            else
                lo=mid+1;
        }
        return -1;
        
        
    }
};