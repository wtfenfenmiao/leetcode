//典型的动态规划DP
class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size();
        if(m==0)
            return 0;
        int n=grid[0].size();
        vector<vector<int>> re(m,vector<int>(n,0));
        int i=0;
        int j=0;
        re[0][0]=grid[0][0];
        for(i=1;i<m;++i)
        {
            re[i][j]=re[i-1][j]+grid[i][j];
        }
        i=0;
        for(j=1;j<n;++j)
        {
            re[i][j]=re[i][j-1]+grid[i][j];
        }
        for(i=1;i<m;++i)
        {
            for(j=1;j<n;++j)
            {
                re[i][j]=min(re[i-1][j],re[i][j-1])+grid[i][j];
            }
        }
        return re[m-1][n-1];
    }
};