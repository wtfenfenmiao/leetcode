class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        int sum=1 << nums.size();
        vector<vector<int>> re(sum,vector<int>());
        for(int i=0;i<nums.size();++i)
        {
            int k=0;
            for(int j=(1 << i);j<(1 << (i+1));++j)
            {
                re[j]=re[k++];     
                re[j].push_back(nums[i]);
            }
        }
        return re;
    }
};




//回溯，通用模板
class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> re;
        vector<int> temp;
        re.push_back(temp);
        backtrack(re,temp,nums,0);
        return re;
    }
    
    void backtrack(vector<vector<int>>& re,vector<int>& temp,vector<int>& nums,int start)
    {
        for(int i=start;i<nums.size();++i)
        {
            temp.push_back(nums[i]);
            re.push_back(temp);
            backtrack(re,temp,nums,i+1);
            temp.pop_back();
        }
    }
};