要点在如何原地更新
//00 当前死上轮死
//01 当前死上轮生
//10 当前生上轮死
//11 当前生上轮生
class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int row=board.size();
        if(row==0)
            return;
        int col=board[0].size();
        for(int i=0;i<row;++i)
        {
            for(int j=0;j<col;++j)
            {
                int lifethis=findstate(board,i,j,row,col);
                if(lifethis)
                    board[i][j]|=2;
                else
                    board[i][j]&=1;
            }
        }
        
        for(int i=0;i<row;++i)
        {
            for(int j=0;j<col;++j)
            {
                board[i][j]>>=1;
            }
        }
        return;
    }
    
    
    int findstate(vector<vector<int>>& board,int x,int y,int row,int col)
    {
        int xx[]={-1,0,1,-1,1,-1,0,1};
        int yy[]={-1,-1,-1,0,0,1,1,1};
        int alive=0;
        int dead=0;
        for(int i=0;i<8;++i)
        {
            int thisx=x+xx[i];
            int thisy=y+yy[i];
            if(thisx<0||thisx>=row||thisy<0||thisy>=col)
                continue;
            if(board[thisx][thisy]==1||board[thisx][thisy]==3)
                ++alive;
            else
                ++dead;
        }
        if(board[x][y]==1||board[x][y]==3)
        {
            if(alive<2||alive>3)
                return 0;
            else
                return 1;
        }
        else
        {
            if(alive==3)
                return 1;
            else
                return 0;
                
        }
    }
};


//又写了一遍
class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int row=board.size();
        if(row==0)
            return;
        int col=board[0].size();
        for(int i=0;i<row;++i)
        {
            for(int j=0;j<col;++j)
            {
                int life=findstate(board,i,j,row,col);
                if(life)
                    board[i][j]|=2;
                else
                    board[i][j]&=1;
            }
        }
        
        for(int i=0;i<row;++i)
        {
            for(int j=0;j<col;++j)
            {
                board[i][j]>>=1;
            }
        }
        return;
    }
    
    
    int findstate(vector<vector<int>>& board,int x,int y,int row,int col)
    {
        int xx[]={-1,0,1,-1,1,-1,0,1};
        int yy[]={-1,-1,-1,0,0,1,1,1};
        int alive=0;
        for(int i=0;i<8;++i)
        {
            int xt=x+xx[i];
            int yt=y+yy[i];
            if(xt<0||xt>=row||yt<0||yt>=col)
                continue;
            if(board[xt][yt]==1||board[xt][yt]==3)
                ++alive;
        }
        if(board[x][y]==1)
        {
            if(alive<2||alive>3)
                return 0;
            else
                return 1;
        }
        else
        {
            if(alive==3)
                return 1;
            else
                return 0;
        }
    }
};