/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        return helper(head,NULL);
    }
    
    TreeNode* helper(ListNode* head,ListNode* tail)
    {
        if(head==tail)
            return NULL;
        ListNode* fast=head;
        ListNode* slow=head;
        while(fast!=tail&&fast->next!=tail)
        {
            fast=fast->next->next;
            slow=slow->next;
        }
        TreeNode* root=new TreeNode(slow->val);
        root->left=helper(head,slow);
        root->right=helper(slow->next,tail);
        return root;
        
    }
};


//另一种没有这个清晰，看懂了但是没写